<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!-- spring mvc 注解驱动,目的是简化配置 -->
    <mvc:annotation-driven validator="validator">
        <!-- 配置http message converter -->
        <mvc:message-converters>
            <!-- fastjson converter -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4">
                <property name="fastJsonConfig">
                    <bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
                        <property name="serializerFeatures">
                            <list>
                                <value>PrettyFormat</value>
                                <value>IgnoreErrorGetter</value>
                                <value>IgnoreNonFieldGetter</value>
                            </list>
                        </property>
                    </bean>
                </property>
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>

            <!-- string converter -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="defaultCharset">
                    <bean class="java.nio.charset.Charset" factory-method="forName">
                        <constructor-arg name="charsetName" value="utf-8"/>
                    </bean>
                </property>
            </bean>

            <!-- other converter -->
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 包扫描,使用filter避免包扫描冲动 -->
    <context:component-scan base-package="cn.cloudwalk.ebank.web.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 验证码配置 -->
    <bean id="captchaService" class="com.google.code.kaptcha.util.Config">
        <constructor-arg name="properties">
            <props>
                <prop key="kaptcha.border">no</prop>
                <prop key="kaptcha.textproducer.font.color">black</prop>
                <prop key="kaptcha.textproducer.char.space">5</prop>
                <prop key="kaptcha.background.clear.from">white</prop>
                <prop key="kaptcha.background.clear.to">white</prop>
            </props>
        </constructor-arg>
    </bean>

    <bean id="exceptionResolver" class="cn.cloudwalk.ebank.web.controller.shared.support.CustomMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="cn.cloudwalk.ebank.core.support.exception.WeiXinAccountNotFoundException">/login</prop>
                <prop key="org.springframework.security.authentication.AccountExpiredException">/login</prop>
            </props>
        </property>
        <property name="exceptionAttribute" value="message"/>
    </bean>
</beans>